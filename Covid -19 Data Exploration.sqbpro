<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/John Carlo/OneDrive/Documents/Personal Documents/Data Analytics Portfolio/COVID Deaths/Covid.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="10675"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,12:maincovid_deaths"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="covid_deaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="87"/><column index="2" value="92"/><column index="3" value="95"/><column index="4" value="93"/><column index="5" value="103"/><column index="6" value="108"/><column index="7" value="104"/><column index="8" value="201"/><column index="9" value="119"/><column index="10" value="115"/><column index="11" value="212"/><column index="12" value="216"/><column index="13" value="212"/><column index="14" value="300"/><column index="15" value="227"/><column index="16" value="223"/><column index="17" value="300"/><column index="18" value="166"/><column index="19" value="116"/><column index="20" value="224"/><column index="21" value="133"/><column index="22" value="241"/><column index="23" value="213"/><column index="24" value="300"/><column index="25" value="230"/><column index="26" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Portfolio Project - COVID 19">/*

Covid 19 Data Exploration using SQLite



Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types



link to dataset: https://ourworldindata.org/covid-deaths
link to the tableau viz: https://public.tableau.com/shared/K7FTSZ4FT?:display_count=n&:origin=viz_share_link



*/



SELECT *

FROM 

	covid_deaths

WHERE

	continent is NOT NULL

	

-- Select Data that we are going to be starting with



SELECT 

	location,

	date,

	population,

	total_cases,

	total_deaths,

	round((CAST(total_deaths as REAL)/CAST(total_cases as REAL))*100,2) as death_percetage

FROM 

	covid_deaths

WHERE

	continent is NOT NULL

ORDER by 1,(substr(date,7,4)||substr(date,4,2)||substr(date,1,2))





-- Total Cases vs Total Deaths

-- Shows likelihood of dying if you contract covid in your country



SELECT 

	location,

	date,

	total_cases,

	total_deaths,

	round((CAST(total_deaths as REAL)/CAST(total_cases as REAL))*100,2) as death_percentage

FROM 

	covid_deaths

WHERE

	continent is NOT NULL

ORDER by 1,(substr(date,7,4)||substr(date,4,2)||substr(date,1,2))



-- Total Cases vs Population

-- Shows what percentage of population infected with Covid

-- Countries with Highest Infection Rate compared to Population



SELECT 

	location,

	population,

	max(total_cases) as highest_infection_count,

	round((CAST(max(total_cases) as REAL)/CAST(population as REAL))*100,2) as infected_percentage

FROM 

	covid_deaths

WHERE

	continent is NOT NULL

GROUP by location

ORDER by infected_percentage DESC



-- Countries with Highest Death Count per Population



SELECT 

	location,

	population,

	max(CAST(total_deaths as INT)) as total_death_count

FROM 

	covid_deaths

WHERE

	continent is NOT NULL

GROUP by location

ORDER by total_death_count DESC



-- BREAKING THINGS DOWN BY CONTINENT

-- Showing death count per continent



SELECT 

	continent,

	population,

	max(cast(total_deaths as INT)) as total_death_count

FROM 

	covid_deaths

WHERE

	continent is not NULL

GROUP by continent





ORDER by total_death_count DESC



-- GLOBAL NUMBERS



SELECT

	sum(new_cases) as global_cases,

	sum(new_deaths) as global_deaths,

	round((CAST(sum(new_deaths) as REAL)/CAST(sum(new_cases) as REAL))*100,2) as death_percentage

FROM

	covid_deaths

WHERE

	continent is NOT NULL 

	

-- Global daily record

	

SELECT

	date,

	sum(new_cases) as new_cases,

	sum(total_cases) as total_cases,

	sum(new_deaths) as new_deaths,

	sum(total_deaths) as total_deaths,

	round((CAST(total_deaths as REAL)/CAST(total_cases as REAL))*100,2) as death_percentage

FROM

	covid_deaths

WHERE

	continent is NOT NULL 

GROUP by date

ORDER by (substr(date,7,4)||substr(date,4,2)||substr(date,1,2))



-- Join covid_deaths and covid_vaccinations table



SELECT *

FROM covid_deaths

	JOIN covid_vaccinations

	on	covid_deaths.location = covid_vaccinations.location

	AND covid_deaths.date = covid_vaccinations.date



-- Total Population vs Vaccinations

-- Shows Percentage of Population that has received at least one Covid Vaccine



SELECT 

	covid_deaths.continent,

	covid_deaths.location,

	covid_deaths.date,

	covid_deaths.population,

	covid_vaccinations.new_vaccinations,

	sum(CAST(covid_vaccinations.new_vaccinations as INT)) over (PARTITION by covid_deaths.location ORDER by covid_deaths.location, substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2)) as total_vac

FROM 

	covid_deaths

	JOIN covid_vaccinations

	on	covid_deaths.location = covid_vaccinations.location

	AND covid_deaths.date = covid_vaccinations.date

where covid_deaths.continent is	NOT NULL

ORDER by 2,(substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2))





-- Using CTE to perform Calculation on Partition By in previous query



WITH popvsvac (	

	continent,

	location,

	date,

	population,

	new_vaccinations,

	total_vac)

	as

	(

SELECT 

	covid_deaths.continent,

	covid_deaths.location,

	covid_deaths.date,

	covid_deaths.population,

	covid_vaccinations.new_vaccinations,

	sum(CAST(covid_vaccinations.new_vaccinations as INT)) over (PARTITION by covid_deaths.location ORDER by covid_deaths.location, substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2)) as total_vac

FROM 

	covid_deaths

	JOIN covid_vaccinations

	on	covid_deaths.location = covid_vaccinations.location

	AND covid_deaths.date = covid_vaccinations.date

where covid_deaths.continent is	NOT NULL

ORDER by 2,(substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2))

)

SELECT *,round((CAST(total_vac as REAL)/CAST(population as REAL))*100,2) as vac_rate

FROM

	popvsvac



-- Creating Table to perform Calculation on Partition By in previous query



DROP TABLE if EXISTS percentpopulationvaccinated	

CREATE TABLE percentpopulationvaccinated 

(

continent TEXT,

location TEXT,

date TEXT,

population  INTEGER,

new_vaccinations INTEGER,

total_vac INTEGER

)

INSERT INTO percentpopulationvaccinated

SELECT

	covid_deaths.continent,

	covid_deaths.location,

	covid_deaths.date,

	covid_deaths.population,

	covid_vaccinations.new_vaccinations,

	sum(CAST(covid_vaccinations.new_vaccinations as INT)) over (PARTITION by covid_deaths.location ORDER by covid_deaths.location, substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2)) as total_vac

FROM 

	covid_deaths

	JOIN covid_vaccinations

	on	covid_deaths.location = covid_vaccinations.location

	AND covid_deaths.date = covid_vaccinations.date

where covid_deaths.continent is	NOT NULL

ORDER by 2,(substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2))



SELECT *,round((CAST(total_vac as REAL)/CAST(population as REAL))*100,2) as vac_rate

FROM

	percentpopulationvaccinated



-- Creating View to store data for later visualizations



DROP VIEW if EXISTS vaccination_rate

CREATE VIEW vaccination_rate as

SELECT

	covid_deaths.continent,

	covid_deaths.location,

	covid_deaths.date,

	covid_deaths.population,

	covid_vaccinations.new_vaccinations,

	sum(CAST(covid_vaccinations.new_vaccinations as INT)) over (PARTITION by covid_deaths.location ORDER by covid_deaths.location, substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2)) as total_vac

FROM 

	covid_deaths

	JOIN covid_vaccinations

	on	covid_deaths.location = covid_vaccinations.location

	AND covid_deaths.date = covid_vaccinations.date

where covid_deaths.continent is	NOT NULL

ORDER by 2,(substr(covid_deaths.date,7,4)||substr(covid_deaths.date,4,2)||substr(covid_deaths.date,1,2))

</sql><current_tab id="0"/></tab_sql></sqlb_project>
